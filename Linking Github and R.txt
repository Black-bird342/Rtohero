Ahora que tenemos tanto RStudio como Git configurados en su computadora en una cuenta de GitHub, es hora de vincularlos para que pueda maximizar los beneficios de usar RStudio en sus canalizaciones de control de versiones. Para vincular RStudio en Git, en RStudio, ve a Herramientas, luego a Opciones globales, luego a Git/Svn. A veces, la ruta predeterminada al ejecutable de Git no es correcta. Confirme que git.exe reside en el directorio que RStudio ha especificado. Si no es así, cambie el directorio a la ruta correcta. De lo contrario, haga clic en «Aceptar» o «Aplicar». Rstudio y Git ahora están vinculados. Ahora, para vincular RStudio a GitHub en esa misma ventana de opciones de RStudio, haga clic en «Crear clave RSA» y cuando haya terminado, haga clic en «Cerrar». Después de esto, en esa misma ventana de nuevo, haga clic en «Ver clave pública» y copie la cadena de números y letras. Cierra esta ventana. Ahora has creado una clave específica para ti que proporcionaremos a GitHub para que sepa quién eres cuando cometes un cambio desde dentro de RStudio. Para hacerlo, ve a github.com, inicia sesión si aún no lo estás, y ve a la configuración de tu cuenta. Allí, vaya a las claves SSH y GPG y haga clic en «Nueva clave SSH». Pega la clave pública que has copiado de RStudio en la caja de claves y dale un título relacionado con RStudio. Confirme la adición de la clave con su contraseña de GitHub. GitHub y RStudio ahora están vinculados. Desde aquí, podemos crear un repositorio en GitHub y enlazar a RStudio. Para hacerlo, ve a GitHub y crea un nuevo repositorio yendo a tu Perfil, Repositorios y Nuevo. Asigne un nombre a su nuevo repositorio de pruebas y déle una breve descripción. Haga clic en «Crear repositorio», copie la URL de su nuevo repositorio. En RStudio, vaya a Archivo, Nuevo Proyecto, seleccione Control de Versión, seleccione Git como su software de control de versiones. Pega en la URL del repositorio desde antes, selecciona la ubicación donde quieres que se almacene el proyecto. Cuando haya terminado, haga clic en «Crear proyecto». Al hacerlo se inicializará un nuevo proyecto vinculado a el repositorio de GitHub y se abrirá una nueva sesión de RStudio. Cree un nuevo script R yendo a Archivo, Nuevo Archivo, R Script y copie y pegue el siguiente código: print («Este archivo fue creado dentro de RStudio») y luego en una nueva línea pegue, print («Y ahora vive en GitHub»). Guarde el archivo. Tenga en cuenta que al hacerlo, la ubicación predeterminada del archivo está dentro de el nuevo directorio de proyecto que creó anteriormente. Una vez hecho esto, mirando hacia atrás en RStudio, en la pestaña Git del cuadrante de entorno, deberías ver tu archivo que acabas de crear. Haga clic en la casilla de verificación debajo de Etapas para poner en escena su archivo. Haga clic en él. Debería abrirse una nueva ventana que muestre todos los archivos modificados de anteriores y abajo que muestre las diferencias en los archivos de etapa con respecto a las versiones anteriores. En el cuadrante superior, en el cuadro de mensaje.COMMIT, escriba usted mismo un mensaje de confirmación. Haga clic en Confirmar, cierre la ventana. Hasta ahora, ha creado un archivo, lo ha guardado, lo ha organizado y lo ha comprometido. Si recuerda su conferencia de control de versiones, el siguiente paso es enviar sus cambios a su repositorio en línea, empujar sus cambios al repositorio de GitHub, vaya a su repositorio de GitHub y vea que la confirmación ha sido registrada. Acaba de enviar con éxito su primera confirmación desde RStudio a GitHub. En esta lección, hemos enlazado Git y RStudio para que RStudio reconozca que lo estás usando como tu software de control de versiones. Después de eso, vinculamos RStudio a GitHub para que pueda empujar y extraer repositorios desde RStudio. Para probar esto, creamos un repositorio en GitHub, lo vinculó con un nuevo proyecto dentro de RStudio, creó un nuevo archivo y luego puso en escena, comprometió y empujó el archivo a su repositorio de GitHub.