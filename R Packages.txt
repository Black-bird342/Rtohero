Ahora que hemos instalado R en RStudio y tenemos una comprensión básica de cómo funcionan juntos, podemos llegar a lo que hace que R sea tan especial, paquetes. Hasta ahora, todo lo que hemos jugado con una R utiliza el sistema Base R. Base R o todo lo incluido en R cuando descarga tiene una funcionalidad bastante básica para estadísticas y trazado, pero a veces puede ser limitante. Para ampliar la funcionalidad básica de R, personas han desarrollado paquetes. Un paquete es una colección de funciones, datos, y código convenientemente proporcionado en un buen formato completo para usted. En el momento de escribir, hay algo más de 14.300 paquetes disponibles para descargar, cada uno con sus propias funciones especializadas y código, todo para algún propósito diferente.El paquete R no debe confundirse con la biblioteca. Estos dos términos a menudo se confunden en el discurso coloquial sobre R. Una biblioteca es el lugar donde se encuentra el paquete en su computadora. Pensar en una analogía, una biblioteca está bien, una biblioteca, y un paquete es un libro dentro de la biblioteca. La biblioteca es donde se encuentran el libro/paquetes.Los paquetes son lo que hacen que R sea tan único. Base R no solo tiene una gran funcionalidad, sino que estos paquetes amplían enormemente su funcionalidad. Tal vez, lo más especial de todo, cada paquete es desarrollado y publicado por la comunidad R en general y depositado en repositorios. Un repositorio es una ubicación central donde muchos paquetes desarrollados se encuentran y están disponibles para su descarga. Hay tres grandes repositorios. Son la Red Integral de Archivos R, o CRAN, , que es el repositorio principal de R con más de 12,100 paquetes disponibles. También está el repositorio de Bioconductor, , que es principalmente para paquetes de enfoque Bioinformatic. Finalmente, hay GitHub, un repositorio de código abierto muy popular que no es específico de R. Por lo tanto, usted sabe dónde encontrar paquetes. Pero hay muchos de ellos. ¿Cómo puedes encontrar un paquete que haga lo que intentas hacer en R? Hay varias vías diferentes para explorar paquetes. Primero, CRAN agrupa todos sus paquetes por su funcionalidad/tema en 35 temas. Llama a esto su vista de tareas. Esto al menos le permite reducir los paquetes, puede mirar a través de un tema relevante para sus intereses. En segundo lugar, hay un gran sitio web.Documentación R, que es un motor de búsqueda de paquetes y funciones de CRAN, Bioconductor, y GitHub, es decir, los tres grandes repositorios. Si tienes una tarea en mente, esta es una excelente manera de buscar paquetes específicos para ayudarte a cumplir esa tarea. También tiene una vista de tareas como CRAN que le permite navegar por temas. Más a menudo, si usted tiene una tarea específica en mente, buscar en Google esa tarea seguida por el paquete R es un gran lugar para comenzar. A partir de ahí, mirar tutoriales, viñetas, y foros para personas que ya están haciendo lo que quieres hacer es una gran manera de encontrar paquetes relevantes. Genial. Encontraste el paquete que quieres. ¿Cómo se instala? Si va a instalar desde el repositorio CRAN, utilice la función Instalar paquetes con el nombre el paquete que desea instalar entre comillas entre paréntesis. Nota, puede usar comillas simples o dobles. Por ejemplo, si desea instalar el paquete ggplot2, debería usar install.packages («ggplot2"). Intenta hacerlo en tu consola R. Este comando descarga el paquete ggplot2 de CRAN y lo instala en su ordenador. Si desea instalar varios paquetes a la vez, puede hacerlo usando un vector de caracteres con los nombres de los paquetes separados por comas como formateados aquí. Si desea utilizar la Interfaz Gráfica de RStudio para instalar paquetes, vaya al menú Herramientas, y la primera opción debe ser Instalar paquetes. Si la instalación desde CRAN, seleccionado es el repositorio y escriba los paquetes deseados en el cuadro correspondiente. El repositorio Bioconductor utiliza su propio método para instalar paquetes. Primero, para obtener las funciones básicas necesarias para instalar a través de Bioconductor, use source (» https://bioconductor.org/biocLite.R «) Esto hace la función principal de instalación de Bioconductor BioClite disponible para usted. Después de esto, llama al paquete que desea instalar entre los paréntesis del comando BioClite como se ve aquí para el paquete GenomicRanges. Instalar desde GitHub es un caso más específico que probablemente no se encuentre con demasiada frecuencia. En el caso de que quieras hacer esto, primero debe encontrar el paquete que desea en GitHub y tome nota tanto del nombre del paquete como del autor del paquete. El flujo de trabajo general está instalando el paquete devtools solo si aún no tiene instalado devtools. Si ha estado siguiendo junto con esta lección, puede que la haya instalado cuando estábamos practicando instalaciones usando la consola R, luego carga el paquete devtools usando la función de biblioteca SO. Más adelante con este comando se está haciendo en unos segundos. Finalmente, usando el comando install_github llamando a los autores nombre de usuario de GitHub seguido del nombre del paquete. La instalación de un paquete no hace que sus funciones estén inmediatamente disponibles para usted. Primero, debe cargar el paquete en R. Para hacerlo, use la función de biblioteca. Piense en esto como cualquier otro software que instale en su computadora. Solo porque hayas instalado el programa no significa que se esté ejecutando automáticamente. Tienes que abrir el programa. Lo mismo con R lo has instalado pero ahora tienes que abrirlo. Por ejemplo, para abrir el paquete ggplot2, usaría la función de biblioteca y lo llamaría ggplot2. Tenga en cuenta que no ponga el nombre del paquete entre comillas. A diferencia de cuando está instalando los paquetes, el comando library no acepta nombres de paquetes entre comillas. Hay un pedido para cargar paquetes. Algunos paquetes requieren que otros paquetes se carguen primero, también conocido como dependencias. Ese paquete es manual y páginas de ayuda. Te ayudaremos a encontrar ese pedido si son exigentes. Si desea cargar un paquete usando la interfaz RStudio, en el cuadrante inferior derecho, hay una pestaña llamada paquetes que enumeran todos los paquetes en una breve descripción, así como el número de versión de todos los paquetes que ha instalado. Para cargar un paquete, simplemente haga clic en la casilla de verificación junto al nombre del paquete. Una vez que tengas un paquete, hay algunas cosas que podrías necesitar saber cómo hacer. Si no está seguro de si ya ha instalado el paquete o desea comprobar si los paquetes están instalados, puede usar cualquiera de los comandos Instalar paquetes o de la biblioteca sin nada entre los paréntesis para verificar. En RStudio, esa pestaña de paquete introducida anterior es otra forma de ver todos los paquetes que ha instalado. Puede comprobar qué paquetes necesitan una actualización con una llamada a los paquetes funcionales. Esto identificará todos los paquetes que se han actualizado desde que los instales/Última actualización. Para actualizar todos los paquetes, utilice paquetes de actualización. Si sólo desea actualizar un paquete específico, sólo tiene que utilizar una vez más los paquetes de instalación. Dentro de la interfaz de RStudio todavía en esa pestaña Paquetes, puede hacer clic en Actualizar, que mostrará todos los paquetes que no están actualizados. Le da la opción de actualizar todos los sus paquetes o le permite seleccionar paquetes específicos. Usted querrá revisar periódicamente sus paquetes y comprobar si se ha quedado desactualizado, sin embargo, tenga cuidado. A veces una actualización puede cambiar la funcionalidad de ciertas funciones. Así que si reejecuta algún código antiguo, el comando puede ser cambiado o tal vez incluso completamente desaparecido y tendrá que actualizar su CO2. A veces desea descargar un paquete en medio de un script. Es posible que el paquete que has cargado no juegue bien con otro paquete que quieras usar. Para descargar un paquete dado, puede usar la función de desconexión. Por ejemplo, escribiría desenlazar package:ggplot2 y luego descargar igual a true en el formato mostrado. Esto descargaría el paquete ggplot2 que cargamos anteriormente. Dentro de la interfaz RStudio en la pestaña Paquetes, puede simplemente descargar un paquete desmarcando la casilla junto al nombre del paquete. Si ya no desea tener un paquete instalado, puede simplemente desinstalarlo usando la función eliminada.Packages. Por ejemplo, elimine los paquetes seguidos de ggplot2 intente eso. Pero entonces realmente reinstaló el paquete ggplot2. Es un paquete de trazado súper útil. Dentro de RStudio en la pestaña Paquetes, al hacer clic en la X al final de la fila de un paquete desinstalará ese paquete. A veces, cuando usted está mirando un paquete que tal vez desee instalar, verá que requiere una cierta versión de R para ejecutarse. Para saber si puedes usar ese paquete, necesitas saber qué versión de R estás ejecutando. Una forma de conocer su versión R es verificar la primera vez que abra R o RStudio. Lo primero que genera en la consola le dice qué versión de R se está ejecutando actualmente. Si no prestaste atención al principio, puedes escribir la versión en la consola y se la salida de información sobre la versión R que estás ejecutando. Otro comando útil es la información de sesión. Le dirá qué versión de R está ejecutando junto con una lista de todos los paquetes que ha cargado. La salida de este comando es un gran detalle para incluir al publicar una pregunta en los foros. Le dice a los ayudantes potenciales mucha información sobre su sistema operativo, R, y los paquetes más sus números de versión que está utilizando. En toda esta información sobre paquetes, no hemos discutido realmente cómo usar las funciones de un paquete. En primer lugar, necesita saber qué funciones están incluidas en un paquete. Para hacer esto, puede ver la forma en que las páginas de ayuda incluidas en todos los paquetes bien hechos. En la consola, puede utilizar la función de ayuda para acceder al archivo de ayuda de un paquete. Intente usar la función de ayuda que llama al paquete es igual a ggplot2 y verá todas las muchas funciones que ggplot2 proporciona. Dentro de la interfaz de RStudio, puede acceder a los archivos de ayuda a través de la pestaña Paquetes. De nuevo, al hacer clic en cualquier nombre de paquete, debería abrir estos archivos de ayuda asociados en la pestaña Ayuda que se encuentra en ese mismo cuadrante junto a la pestaña Paquetes. Al hacer clic en cualquiera de estas páginas de ayuda, accederá a la página de ayuda de funciones que le indica para qué sirve esa función y cómo usarla. Una vez que sepas qué función dentro de un paquete quieres usar, simplemente lo llamas en la consola como cualquier otra función que hayamos estado usando a lo largo de esta lección. Una vez cargado un paquete, es como si fuera parte de la funcionalidad base R. Si todavía tiene preguntas sobre qué funciones dentro de un paquete son adecuadas para usted o cómo usarlas, muchos paquetes incluyen viñetas. Estos son archivos de ayuda extendidos que incluyen una visión general del paquete y sus funciones, pero a menudo van más allá e incluyen ejemplos detallados de cómo usar las funciones en palabras simples que puede seguir junto con para ver cómo usar el paquete. Para ver las viñetas incluidas en un paquete, puede utilizar la función BrowseVignettes. Por ejemplo, veamos las viñetas incluidas en ggplot2 usando BrowseVigettes seguido de ggplot2, deberías ver que hay dos viñetas incluidas. Extendiendo ggplot2 y especificación estética. Explorando la viñeta de especificaciones estéticas es un gran ejemplo de cómo viñetas pueden ser útiles instrucciones claras sobre cómo utilizar las funciones incluidas. En esta lección, hemos explorado nuestros paquetes en profundidad. Examinamos qué es un paquete y cómo difiere de una biblioteca, qué son los repositorios y cómo encontrar un paquete relevante para sus intereses. Investigamos todos los aspectos de cómo funcionan los paquetes, cómo instalarlos desde los distintos repositorios, cómo cargarlos, cómo verificar qué paquetes están instalados, y cómo actualizar, desinstalar y descargar paquetes. Tomamos un pequeño desvío y miramos cómo comprobar con la versión de R que tiene que a menudo es un detalle importante a saber al instalar paquetes. Finalmente, pasamos algún tiempo aprendiendo cómo explorar archivos de ayuda y viñetas que a menudo le dan una buena idea de cómo usar un paquete y todas sus funciones.