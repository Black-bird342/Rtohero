Ahora que tenemos un control de qué es el control de versiones. En esta lección, se registrará para una cuenta de GitHub, navegar por el sitio web de GitHub para familiarizarse con algunas de sus características e instalar y configurar Git. Todo en preparación para vincular ambos con su RStudio. Como aprendimos anteriormente, GitHub es un sistema de gestión basado en la nube para sus archivos controlados por versiones. Al igual que Dropbox, tus archivos están a la vez localmente en tu ordenador y alojados en línea y de fácil acceso. Su interfaz le permite administrar el control de versiones y proporciona a los usuarios una interfaz basada en la web para crear proyectos, compartirlos, actualizar código, etc. Para obtener una cuenta de GitHub, primero vaya a www.github.com. Usted será llevado a su página de inicio donde debe llenar su información, hacer un nombre de usuario, poner en su correo electrónico, elegir una contraseña segura, y haga clic en registrarse en GitHub. Ahora debería haber iniciado sesión en GitHub. En el futuro, para iniciar sesión en GitHub, vaya a github.com donde se le presentará una página de inicio. Si aún no has iniciado sesión, haz clic en el enlace de inicio de sesión en la parte superior. Una vez que hayas hecho eso, verás la página de inicio de sesión donde ingresarás tu nombre de usuario y contraseña que creaste anteriormente. Una vez que hayas iniciado sesión, volverás a github.com pero esta vez la pantalla debería verse así. Vamos a hacer un rápido recorrido por el sitio web de GitHub y nos centraremos especialmente en estas secciones de la interfaz, configuración de usuario, notificaciones, archivos de ayuda y la guía de GitHub. Después de este tour, hará su primer repositorio usando la guía GitHub. Primero, veamos la configuración de tu usuario. Ahora que has iniciado sesión en GitHub, deberíamos completar parte de tu información de perfil y familiarizarnos con la configuración de la cuenta. En la esquina superior derecha, hay un icono con un estrecho a su lado. Haga clic en esto y vaya a su perfil. Aquí es donde controlas tu cuenta y puedes ver tu contribución, historial y repositorios. Ya que acabas de empezar, no vas a tener ningún repositorio o contribución todavía, pero espero que lo cambiemos pronto. Lo que podemos hacer ahora mismo es editar tu perfil. Vaya a editar el perfil a lo largo del borde izquierdo de la página. Aquí, tómese un tiempo y llene su nombre y una pequeña descripción de sí mismo en el cuadro de la biografía. Si quieres, sube una foto de ti mismo. Cuando haya terminado, haga clic en Actualizar perfil. En el lado izquierdo de esta página, hay muchas opciones para explorar. Haga clic en cada uno de estos menús para familiarizarse con las opciones disponibles para usted. Para empezar, ve a la página de la cuenta. Aquí, puede editar su contraseña o, si no está satisfecho con su nombre de usuario, cámbiela. Sin embargo, tenga cuidado, puede haber consecuencias no deseadas cuando cambie su nombre de usuario si acaba de empezar y no tiene ningún contenido todavía, probablemente estará seguro sin embargo. Siga buscando a través de las opciones de configuración personal por su cuenta. Cuando hayas terminado, vuelve a tu perfil. Una vez que haya tenido un poco más de experiencia con GitHub, eventualmente terminará con algunos repositorios a su nombre. Para encontrarlos, haga clic en el enlace de repositorios en su perfil. Por ahora, probablemente se verá así. Sin embargo, al final de la conferencia, vuelva a esta página para encontrar su repositorio recién creado. A continuación, echaremos un vistazo al menú de notificaciones. A lo largo de la barra de menú en la parte superior de su ventana, hay un icono de campana que representa sus notificaciones. Haga clic en la campana. Una vez que seas más activo en GitHub y estés colaborando con otros, aquí es donde puedes encontrar mensajes y notificaciones para todos los repositorios, equipos y conversaciones de las que eres parte. En la parte inferior de cada página está el botón de ayuda. GitHub tiene un gran sistema de ayuda en su lugar. Si alguna vez tienes una pregunta sobre GitHub, este debería ser tu primer punto para buscar. Tómese un tiempo ahora y mire a través de los diversos archivos de ayuda y vea si alguna llama la atención. GitHub reconoce que este puede ser un proceso abrumador para nuevos usuarios y, como tal, han desarrollado un mini tutorial para comenzar con GitHub. Vaya a través de esta guía ahora y cree su primer repositorio. Cuando haya terminado, debe tener un repositorio que se vea algo como esto. Tómese un tiempo para explorar el repositorio. Echa un vistazo a tu historial de confirmaciones hasta ahora. Aquí puedes encontrar todos los cambios que se han realizado en el repositorio y puedes ver quién hizo el cambio, cuando hicieron el cambio, y siempre que escribiste un mensaje de confirmación apropiado. Puedes ver por qué hicieron el cambio. Una vez que hayas explorado todas las opciones en el repositorio, vuelve a tu perfil de usuario. Debería verse un poco diferente de antes. Ahora, cuando estés en tu perfil, puedes ver tu último repositorio creado. Para obtener una lista completa de sus repositorios, haga clic en la pestaña Repositorios. Aquí puedes ver todos tus repositorios, una breve descripción, el tiempo de la última edición, y a lo largo del lado derecho, hay un gráfico de actividad mostrando uno y cuántas ediciones se han realizado en el repositorio. Como recordarán de nuestra última conferencia, Git es el sistema de control de versiones libre y de código abierto en el que GitHub está construido. Uno de los principales beneficios de usar el sistema Git es su compatibilidad con RStudio. Sin embargo, para vincular los dos programas juntos, primero necesitamos descargar e instalar Git en tu computadora. Para descargar Git, vaya a git-scm.com/download. Haga clic en el enlace de descarga apropiado para su sistema operativo. Esto debería iniciar el proceso de descarga. Primero veremos el proceso de instalación para equipos Windows y seguiremos eso con los pasos de instalación de Mac. Siga junto con las instrucciones pertinentes para su sistema operativo. Para equipos Windows, una vez finalizada la descarga, abra el archivo.exe para iniciar el asistente de instalación. Si recibe una advertencia de seguridad, haga clic en ejecutar y para permitir. A continuación, haga clic en el asistente de instalación generalmente aceptando las opciones predeterminadas a menos que tenga una razón convincente para no hacerlo. Haga clic en instalar y permita que el asistente complete el proceso de instalación. Después de esto, marque la opción de iniciar Git Bash. A menos que tenga curiosidad, anule la selección de la casilla Ver notas de la versión ya que probablemente no esté interesado en esto en este momento. Al hacerlo, se abrirá un entorno de línea de comandos. Siempre que haya aceptado las opciones predeterminadas durante el proceso de instalación, ahora habrá un acceso directo al menú de inicio para iniciar Git Bash en el futuro. Ya has instalado Git. Para Mac, le guiaremos por el proceso de instalación más común. Sin embargo, hay varias formas de obtener Git en tu Mac. Puedes seguir los tutoriales en www.@lash.com /git/tutorials/installgitforalternativeinstallationrats. Después de descargar la versión adecuada de git para Mac, deberías haber descargado un archivo dmg para su instalación en tu Mac. Abra este archivo. Esto instalará Git en su computadora. Se abrirá una nueva ventana. Haga doble clic en el archivo PKG y se abrirá un asistente de instalación. Haga clic en las opciones que aceptan los valores predeterminados. Haga clic en Instalar. Cuando se le solicite, cierre el asistente de instalación. Ha instalado correctamente Git. Ahora que Git está instalado, necesitamos configurarlo para usarlo con GitHub en preparación para vincularlo con RStudio. Necesitamos decirle a Git cuál es su nombre de usuario y correo electrónico para que sepa cómo nombrar cada commit que viene de usted. Para hacerlo, en el símbolo del sistema ya sea Git Bash para Windows o terminal para Mac, escriba git config —global user.name «Jane Doe» con el nombre de usuario deseado en lugar de Jane Doe. Este es el nombre con el que se etiquetará cada commit. Después de esto, en el símbolo del sistema, git config —global user.email janedoe@gmail.com asegurándose de usar la misma dirección de correo electrónico con la que te registraste en GitHub. En este punto, debe estar configurado para el siguiente paso. Pero solo para verificar, confirme sus cambios escribiendo git config —list. Al hacerlo, deberías ver el nombre de usuario y el correo electrónico que seleccionaste anteriormente. Si nota algún problema o desea cambiar estos valores, simplemente vuelva a escribir los comandos de configuración originales de anteriores con los cambios deseados. Una vez que esté satisfecho de que su nombre de usuario y correo electrónico son correctos, salga de la línea de comandos escribiendo exit y presione enter. En este punto, todos están listos para la próxima conferencia. En esta lección, nos registramos para una cuenta de GitHub y visitamos el sitio web de GitHub. Hicimos su primer repositorio y completamos alguna información básica de perfil en GitHub. Después de esto, instalamos Git en tu ordenador y lo configuramos para compatibilidad con GitHub y RStudio.