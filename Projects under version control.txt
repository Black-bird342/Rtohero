En la lección anterior, vinculamos RStudio con Git y GitHub. Al hacer esto, creamos un repositorio en GitHub y lo vinculamos a RStudio. A veces, sin embargo, es posible que ya tengas un proyecto R que aún no está bajo control de versión o vinculado con GitHub. Arreglemos eso. Entonces, ¿qué pasa si ya tienes un proyecto R en el que has estado trabajando pero no lo tienes vinculado a ningún software de control de versiones tat tat? Afortunadamente, RStudio y GitHub reconocen que esto puede suceder y pasos en su lugar para ayudarlo. Es cierto que esto es un poco más problemático de hacer que simplemente crear un repositorio en GitHub y vincularlo con RStudio antes de comenzar el proyecto. Así que, primero, vamos a establecer una situación en la que tenemos un proyecto local que no está bajo control de versiones. Vaya a Archivo, Nuevo Proyecto, Nuevo Directorio, Nuevo Proyecto y asigne un nombre a su proyecto. Dado que estamos tratando de emular un momento en el que tiene un proyecto que no está actualmente bajo control de versión, no haga clic en Crear un repositorio git, haga clic en Crear proyecto. Ahora hemos creado un proyecto R que no está actualmente bajo control de versión. Arreglemos eso. Primero, configurémoslo para interactuar con Git. Abra Git Bash o Terminal y navegue hasta el directorio que contiene sus archivos de proyecto. Desplazarse por los directorios escribiendo CD para cambiar directorio, seguido de la ruta del directorio. Cuando el símbolo del sistema en la línea anterior a el signo del dólar dice la ubicación correcta de su proyecto, usted está en la ubicación correcta. Una vez aquí, escriba git init seguido del período GitHub. Esto inicializa este directorio como un repositorio de Git y agrega todos los archivos en el directorio a su repositorio local. Comprometa estos cambios en el repositorio de Git usando git commit dash m commit inicial. En este punto, hemos creado un proyecto R y ahora lo hemos vinculado al control de versiones de Git. El siguiente paso es vincular esto con GitHub. Para hacer esto, vaya a github.com. De nuevo, cree un nuevo repositorio. Asegúrese de que el nombre es exactamente el mismo que su proyecto R y no inicialice el archivo léame, gitignore o licencia. Una vez que haya creado este repositorio, debería ver que hay una opción para insertar un repositorio existente desde la línea de comandos con instrucciones a continuación que contienen código sobre cómo hacerlo. En Git Bash o Terminal, copia y pega estas líneas de código para vincular tu repositorio con GitHub. Después de hacerlo, actualice su página de GitHub y ahora debería verse algo como esto. Cuando reabra su proyecto en RStudio, ahora debería tener acceso a la pestaña Git en el cuadrante superior derecho, entonces puede presionar a GitHub desde dentro de RStudio cualquier cambio futuro. Si hay un proyecto existente en el que otros están trabajando al que se le pide que contribuya, puede vincular el proyecto existente con su RStudio. Sigue exactamente las mismas premisas que desde la última lección donde creó un repositorio de GitHub y luego lo clonó en su computadora local usando RStudio. En resumen, en RStudio, vaya a Archivo, Nuevo proyecto, Control de versiones. Seleccione Git como su sistema de control de versiones, y como en la última lección, proporcione la URL al repositorio que está intentando clonar y seleccione una ubicación en su computadora para almacenar los archivos localmente. Cree el proyecto. Todos los archivos existentes en el repositorio ahora deben almacenarse localmente en su computadora y usted tiene la capacidad de presionar desde su interfaz RStudio. La única diferencia con respecto a la última lección es que no creó el repositorio original. En su lugar, clonaste la de otra persona. En esta lección, repasamos cómo convertir un proyecto existente para estar bajo control de versión de Git usando la línea de comandos. Después de esto, vinculamos su proyecto controlado de nueva versión a GitHub usando una mezcla de comandos de GitHub en la línea de comandos. Luego resumimos brevemente cómo clonar un repositorio de GitHub existente en su máquina local usando RStudio.